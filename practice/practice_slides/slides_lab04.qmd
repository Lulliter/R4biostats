---
title: "Lab 4: Intro to Machine Learning"
subtitle: "<span style='font-size:2em;'> Practice session covering topics discussed in Lecture 4 </span>"
author: "<a href='https://r4biostats.com/me.html' style='color:#72aed8;font-weight:600;'>M. Chiara Mimmi, Ph.D.</a>&ensp;|&ensp;Università degli Studi di Pavia"
date: 2024-07-27
date-format: long
code-link: true
format:
  revealjs:
    smaller: true
    scrollable: true
    theme: ../../theme/slidesMine.scss # QUARTO LOOKS IN SAME FOLDER 
#    logo: imgs_slides/mitgest_logo.png
    footer: '[R 4 Biostatistics](https://r4biostats.com/) | MITGEST::training(2024)'
#    footer: <https://lulliter.github.io/R4biostats/lectures.html>
## ------------- x salvare come PDF 
    standalone: false
    ## -------Produce a standalone HTML file with no external dependencies,
    embed-resources: true
    transition: fade
    background-transition: fade
    highlight-style: ayu-mirage
    slide-number: true
    fig-cap-location: top
    # fig-format: svg
    pdf-separate-fragments: false
    # fig-align: center
execute:
  # Quarto pre code blocks do not echo their source code by default
  echo: true
  include: true
  freeze: auto
bibliography: ../../bib/R4biostats.bib
csl: ../../bib/apa-6th-edition.csl 
suppress-bibliography: true
---

# [GOAL OF TODAY'S PRACTICE SESSION]{.r-fit-text}

::: {style="font-size: 90%;"}
::: {style="color:#77501a"}
+ Review the basic questions we can ask about ASSOCIATION between any two variables:
  + does it exist?
  + how strong is it?
  + what is its direction?
+ Introduce a widely used analytical tool: REGRESSION

:::
:::

<br><br>

::: {style="font-size: 70%;"}
The examples and code from this lab session follow very closely the open access book:  

+ Vu, J., & Harrington, D. (2021). **Introductory Statistics for the Life and Biomedical Sciences**. [https://www.openintro.org/book/biostat/](https://www.openintro.org/book/biostat)
:::


## Topics discussed in Lecture # 4


::: {style="font-size: 75%;"}
**Lecture 4: topics** 

 

:::  

# R ENVIRONMENT SET UP & DATA

## Needed R Packages
::: {style="font-size: 80%;"}
+ We will use functions from packages `base`, `utils`, and `stats` (pre-installed and pre-loaded) 
+ We will also use the packages below (specifying `package::function` for clarity).
:::

```{r}
# Load them for this R session

# General 
library(fs)      # file/directory interactions
library(here)    # tools find your project's files, based on working directory
library(paint) # paint data.frames summaries in colour
library(janitor) # tools for examining and cleaning data
library(dplyr)   # {tidyverse} tools for manipulating and summarizing tidy data 
library(forcats) # {tidyverse} tool for handling factors
library(openxlsx) # Read, Write and Edit xlsx Files
library(flextable) # Functions for Tabular Reporting
# Statistics
library(rstatix) # Pipe-Friendly Framework for Basic Statistical Tests
library(lmtest) # Testing Linear Regression Models # Testing Linear Regression Models
library(broom) # Convert Statistical Objects into Tidy Tibbles
library(tidymodels) # not installed on this machine
library(performance) # Assessment of Regression Models Performance 
# Plotting
library(ggplot2) # Create Elegant Data Visualisations Using the Grammar of Graphics
```


<!-- # Data  -->
<!-- # devtools::install_github("OI-Biostat/oi_biostat_data") -->
<!-- #library(oibiostat) # Data Package for OpenIntro Biostatistics  -->
 
# DATASETS for today

::: {style="font-size: 70%;"}
We will use examples (with adapted datasets) from real clinical studies, provided among the learning materials of the open access books:  

+ Vu, J., & Harrington, D. (2021). **Introductory Statistics for the Life and Biomedical Sciences**. [https://www.openintro.org/book/biostat/](https://www.openintro.org/book/biostat)
+ Çetinkaya-Rundel, M., & Hardim, J. (2023). **Introduction to Modern Statistics (1st Ed)**. [https://openintro-ims.netlify.app/](https://openintro-ims.netlify.app/)

:::

<!-- FATTO IO MA LORO NON VEDONO -->
```{r}
#| eval: false
#| output: false
#| echo: false

library(oibiostat) # Data Package for OpenIntro Biostatistics
library(openintro) # Data Sets and Supplemental Functions from 'OpenIntro' Textbooks and Labs 
data(famuss)
data(prevend)
data(prevend.samp)
data(nhanes.samp.adult.500 )


# li salvo nel mio folder per poi darglieli 

nhanes.samp.adult.500 
write.csv(nhanes.samp.adult.500, file = here::here("practice", "data_input", "03_datasets",
                                      "nhanes.samp.csv"))

prevend
write.csv(prevend, file = here::here("practice", "data_input", "03_datasets",
                                      "prevend.csv"))

prevend.samp
write.csv(prevend.samp, file = here::here("practice", "data_input", "03_datasets",
                                      "prevend.samp.csv"))

famuss
write.csv(famuss, file = here::here("practice", "data_input", "03_datasets",
                                      "famuss.csv"))

data(COL)
colors <- COL 
saveRDS(colors, file = here::here("practice", "data_input", "03_datasets",
                                       "colors.rds"))

```

 
## [Importing Dataset 1 (NHANES)]{.r-fit-text}

::: {style="font-size: 85%;"}
**Name**: NHANES (National Health and Nutrition Examination Survey) combines interviews and physical examinations to assess the health and nutritional status of adults and children in the United States. Sterted in the 1960s, it became a continuous program in 1999.  
**Documentation**: [dataset1](https://wwwn.cdc.gov/nchs/nhanes/Default.aspx)  
**Sampling details**: Here we use a sample of 500 adults from NHANES 2009-2010 & 2011-2012 (`nhanes.samp.adult.500` in the R `oibiostat` package, which has been adjusted so that it can be viewed as a random sample of the US population)
::: 
```{r}
#| eval: false
#| output: false
#| echo: false
#| 
# Check my working directory location
# here::here()

# Use `here` in specifying all the subfolders AFTER the working directory 
nhanes_samp <- read.csv(file = here::here("practice", "data_input", "03_datasets",
                                      "nhanes.samp.csv"), 
                          header = TRUE, # 1st line is the name of the variables
                          sep = ",", # which is the field separator character.
                          na.strings = c("?","NA" ), # specific MISSING values  
                          row.names = NULL) 
```

 
+ Adapting the function `here` to match your own folder structure
 
## [*NHANES* Variables and their description]{.r-fit-text}
::: {style="font-size: 60%;"}
[[EXCERPT: see complete file in Input Data Folder]]{style="color:#77501a"}

```{r}
#| eval: false
#| output: false
#| echo: false
#| 
nhanes_desc <- tribble(
  ~Variable, ~ Type, ~Description,
"X"                ,"int", "xxxx", 
"ID"               ,"int", "xxxxx", 
"SurveyYr"         ,"chr", "yyyy_mm. Ex. 2011_12",    
"Gender"           ,"chr", "Gender (sex) of study participant coded as male or female",
"Age"              ,"int", "##", 
"AgeDecade"        ,"chr", "yy-yy es 20-29",   
# "AgeMonths"        ,"int", "### es 471", 
#"Race1"            ,"chr", "Reported race of study participant: Mexican, Hispanic, White, #Black, or Other",
#"Race3"            ,"chr", "Reported race of study participant... Not availale for #2009-10", 

"Education"        ,"chr", "[>= 20 yro]. Ex. 8thGrade, 9-11thGrade, HighSchool, SomeCollege, or CollegeGrad.", 
# "MaritalStatus"    ,"chr", "[>= 20 yro]. Ex. Married, Widowed, Divorced, Separated, # NeverMarried, or LivePartner",  
# "HHIncome"         ,"chr","Total annual gross income for the household in US dollars", 
# "HHIncomeMid"      ,"int", "Numerical version of HHIncome derived from the middle income # in each category. Ex. 12500 40000" ,   
# "Poverty"          ,"dbl", "A ratio of family income to poverty guidelines. Smaller # numbers indicate more poverty Ex.. 0.95 1.74 4.99" , 
# "HomeRooms"        ,"int", "How many rooms are in home of study participant (counting # kitchen but not bath room).", 
# "HomeOwn"          ,"chr", "One of Home, Rent, or Other", 
# "Work"             ,"chr", "NotWorking Working" ,
  
"Weight"           ,"dbl", "Weight in kg",
# "Length"           ,"lgl", "Recumbent length in cm. Reported for participants aged 0 - 3 years", 
# "HeadCirc"         ,"lgl", "Head circumference in cm. Reported for participants aged 0 years (0 - 6 months)", 
"Height"           ,"dbl",  "Standing height in cm. Reported for participants aged 2 years or older.",
"BMI"              ,"dbl",  "Body mass index (weight/height2 in kg/m2). Reported for participants aged 2 years or older", 
# "BMICatUnder20yrs" ,"lgl",  "Body mass index category. Reported for participants aged 2 to 19 years", 
# "BMI_WHO"          ,"chr",  "Body mass index category. Reported for participants aged 2 years or older", 
"Pulse"            ,"int",  "60 second pulse rate",
# "BPSysAve"         ,"int", "Combined systolic blood pressure reading, following the # procedure outlined for BPXSAR",
# "BPDiaAve"         ,"int", "Combined diastolic blood pressure reading, following the # procedure outlined for BPXDAR",
#"BPSys1"           ,"int", "Systolic blood pressure in mm Hg – first reading",
#"BPDia1"           ,"int", "Diastolic blood pressure in mm Hg – second reading (consecutive readings)",
#"BPSys2"           ,"int", "Systolic blood pressure in mm Hg – second reading (consecutive readings)",
#"BPDia2"           ,"int", "Diastolic blood pressure in mm Hg – second reading",
#"BPSys3"           ,"int", "Systolic blood pressure in mm Hg third reading (consecutive readings)",
#"BPDia3"           ,"int", "Diastolic blood pressure in mm Hg – third reading (consecutive readings)",
#"Testosterone"     ,"dbl", "Testerone total (ng/dL). Reported for participants aged 6 years or older. Not available for 2009-2010",
#
"DirectChol"       ,"dbl","Direct HDL cholesterol in mmol/L. Reported for participants aged 6 years or older", 
"TotChol"          ,"dbl","Total HDL cholesterol in mmol/L. Reported for participants aged 6 years or older", 
#"UrineVol1"        ,"int", "Urine volume in mL – first test. Reported for participants aged 6 years or older", 
#"UrineFlow1"       ,"dbl", "Urine flow rate in mL/min – first test. Reported for participants aged 6 years or older", 
#"UrineVol2"        ,"int", "Urine volume in mL – second test",
#"UrineFlow2"       ,"dbl","Urine flow rate (urine volume/time since last urination) in mL/min – second test",
"Diabetes"         ,"chr","Study participant told by a doctor or health professional that they have diabetes", 
"DiabetesAge"      ,"int", "Age of study participant when first told they had diabetes", 
"HealthGen"        ,"chr", "Self-reported rating of health: Excellent, Vgood, Good, Fair, or Poor Fair" , 
#"DaysPhysHlthBad"  ,"int", "Self-reported # of days participant’s physical health was not good out of the past 30 days", 
#"DaysMentHlthBad " ,"int", "Self-reported # of days participant’s mental health was not good out of the past 30 days", 
#"LittleInterest"   ,"chr", "Self-reported # of days where participant had little interest in doing things. Among: None, Several, Majority, #or AlmostAll", 
#"Depressed"        ,"chr", "Self-reported # of days where participant felt down, depressed or hopeless. Among: None, Several, Majority, or #AlmostAll", 
#"nPregnancies"     ,"int", "# times participant has been pregnant",
#"nBabies"          ,"int", "# deliveries resulted in live births", 
#"PregnantNow"      ,"chr", "Pregnancy status ascertained for females 8-59 years of age", 
#
#"Age1stBaby"       ,"int",  "Age of participant at time of first live birth",
#"SleepHrsNight"    ,"int",  "Self-reported # of hours study participant gets at night on weekdays or workdays. For participants aged 16 #years and older", 
#"SleepTrouble"     ,"chr", "Participant [16 years and older] has had trouble sleeping. Coded as Yes or No." ,  
#"PhysActive"       ,"chr", "Participant does moderate or vigorous-intensity sports, fitness or recreational activities (Yes or No)." ,  
#"PhysActiveDays"   ,"int", "Number of days in a typical week that participant does moderate or vigorous intensity activity. ", 
#"TVHrsDay"         ,"chr", "Number of hours per day on average participant watched TV over the past 30 days.",
#"CompHrsDay"       ,"chr", "Number of hours per day on average participant used a computer or gaming device over the past 30 day", 
#"TVHrsDayChild"    ,"lgl", "[2-11 yro] Number of hours per day on average participant watched TV over the past 30 days.",
#"CompHrsDayChild"  ,"lgl", "[2-11 yro] Number of hours per day on average participant used a computer or gaming device over the past 30 #day", 
"Alcohol12PlusYr"  ,"chr",  "Participant has consumed at least 12 drinks of any type of alcoholic beverage in any one year", 
#"AlcoholDay"       ,"int",  "Average number of drinks consumed on days that participant drank alcoholic beverages", 
#"AlcoholYear"      ,"int",  "[>+ 18yro] Estimated number of days over the past year that participant drank alcoholic beverages", 
#"SmokeNow"         ,"chr", "Study participant currently smokes cigarettes regularly. (Yes or No)",  
#"Smoke100"         ,"chr", "Study participant has smoked at least 100 cigarettes in their entire life. (Yes pr No)",  
#"Smoke100n"        ,"chr", " Smoker Non-Smoker" , 
#"SmokeAge"         ,"int", "Age study participant first started to smoke cigarettes fairly regularly", 
#"Marijuana"        ,"chr",  "Participant has tried marijuana", 
#"AgeFirstMarij"    ,"int", "Age Participant has tried marijuana first", 
#"RegularMarij"     ,"chr", "Participant has been/is a regular marijuana user (used at least once a month for a year) (Yes or No)",
#"AgeRegMarij"      ,"int", "Age of participant when first started regularly using marijuana", 
#"HardDrugs"        ,"chr", "Participant has tried cocaine, crack cocaine, heroin or methamphetamine (Yes or No)" ,
#"SexEver"          ,"chr", "Participant had had  sex (Yes or No)" ,
#"SexAge"           ,"int", "Age Participant had had sex first time" ,
#"SexNumPartnLife"  ,"int", "Number of opposite sex partners participant has had",
#"SexNumPartYear"   ,"int", "Number of opposite sex partners over the past 12 months",
#"SameSex"          ,"chr", "Participant has had any kind of sex with a same sex partne(Yes or No)" ,
#"SexOrientation"   ,"chr",  "Participant’s sexual orientation One of Heterosexual, Homosexual, Bisexual", 
"..."  ,"...",  "..."#, 
)

kableExtra::kable(nhanes_desc)
```
:::


## []{.r-fit-text}
## []{.r-fit-text}


# _______ qui 
## []{.r-fit-text}


# _______ >>>>> SALTO  


https://www.statology.org/interpret-regression-output-in-r/
https://www.youtube.com/watch?v=ebHLMyqC2UY
https://www.learnbymarketing.com/tutorials/explaining-the-lm-summary-in-r/

## Splitting the sample 

If we seek any causal relationship between an explanatory and outcome variable we should **split** our sample to have:

1. one `sample to "train"` a model on
2. one `sample to "test"` the model on 

+ Otherwise out model will seem better than it is (since it will be specifically built to "fit" our data) 

+ The function `rsample::initial_split` will assist in that
```{r}
#| eval: false
#| output: false
#| echo: false
nhanes_split <- rsample::initial_split(nhanes)
# default = 75%  of observations 
nhanes_train <- rsample::training(nhanes_split)
# default = 25%  of observations 
nhanes_test <- rsample::testing(nhanes_split)
```


## Linear regression performance 

We can start looking at how the model performs by applying it to our `nhanes_test` sub-sample, utilizing the function `predict`
 
```{r}
#| eval: false
#| output: false
#| echo: false


# recall the dataset size 
nrow(nhanes_test) # 125 
# obtain 125 predicted observations 
predict(lr_model, nhanes_test)
```

## Linear regression performance: predicted values in test sample

+ We can look the 95% CI of any predicted values 
```{r}
#| eval: false
#| output: false
#| echo: false


pred_val_test <- predict(lr_model, nhanes_test, interval = "confidence")
# print out first 6 predicted values and CI boundaries 
head(pred_val_test)
```

+ We can look the CI 95% of a single predicted values 
```{r}
#| eval: false
#| output: false
#| echo: false


# obtain 125 predicted observations + 95% 
pred_val_test <- predict(lr_model, nhanes_test, interval = "prediction")
# print out first 6 predicted values and CI boundaries 
head(pred_val_test)
```

## Linear regression performance: RMSE

Basically we are asking: **"how does the prediction compare to the actual test dataset?"**

For this we take the difference between the predicted and the actual value as 

`RMSE = Root Means Squared Error` 

```{r}
#| eval: false
#| output: false
#| echo: false


# --- testing sample 
RMSE <- sqrt(mean(
  (nhanes_test$bmi - predict(lr_model, nhanes_test))^2,
  na.rm = T))

RMSE # 7.451677
```

> This is quite close to the **Residual standard error** that we got from the regression model summary (6.843) -- despite that was taken from **training data** and this comes from testing data 

```{r}
#| eval: false
#| output: false
#| echo: false

# --- training !!!! sample 
k = length(lr_model$coefficients)-1 #Subtract one to ignore intercept
n =length(lr_model$residuals)
df = n-(1+k)
# Squared Sum of Errors
SSE =sum(lr_model$residuals**2) # 17375.27

# --- Residual Standard Error
sqrt(SSE/df)  # 6.843509
```


<!-- 
instead of dividing by df (like in Residual Standard Error) I take the SUM of SQUARE ERR divided by n(train)
so it makes sense that it is a bit higher  -->


## Linear regression performance: $R^2$

```{r}
#| eval: false
#| output: false
#| echo: false


#Multiple R-Squared (Coefficient of Determination)
SSyy=sum((nhanes_test$bmi - mean(nhanes_test$bmi, na.rm = T))**2)
SSE=sum(lr_model$residuals**2)
(SSyy-SSE)/SSyy
#Alternatively
1-SSE/SSyy
```

## Linear regression models outputs: model fit 

```{r}
#| eval: false
#| output: false
#| echo: false


str(summary(lr_model)) 
names(summary(lr_model))

summary(lr_model)$sigma
summary(lr_model)$df
summary(lr_model)$r.squared
summary(lr_model)$adj.r.squared
summary(lr_model)$fstatistic
summary(lr_model)$cov.unscaled  ##lm 
```

# _______SALTO<<<<<



